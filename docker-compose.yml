services:
  postgres:
    image: postgres:15
    container_name: planeta_postgres
    restart: always
    ports:
      - "5444:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: planeta_agua
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d planeta_agua" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: planeta_backend
    restart: always
    ports:
      - "3333:3333"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # IMPORTANTE: host = postgres (nome do serviÃ§o)
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/planeta_agua
      PORT: 3333
      ADMIN_EMAIL: admin@meusistema.com
      ADMIN_PASSWORD: admin123
      ADMIN_NAME: Administrador
      JWT_SECRET: batata-com-pao
      JWT_EXPIRES_IN: 8h
      NODE_ENV: development
    volumes:
      - ./backend:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    # DEV: usa ts-node direto. Se preferir build, troco o command pra build + node dist
    command: >
      sh -c "
        npm install &&
        npx prisma generate &&
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npx ts-node server.ts
      "

volumes:
  pgdata:
